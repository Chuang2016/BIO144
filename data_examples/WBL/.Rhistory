source('~/Subversion/ResponseError/Simulations/ZINB/explorative/zinb_4.r')
hist(betax_naive - betax_jags)
betax_naive
exp(-0.5)
exp(-0.1)
hist(betax_naive - betax_true)
library(MASS)
library(latticeExtra)
library(gplots)
par(mfrow=c(1,2))
par(oma=c(4,6,3,3))
par(mar=c(0,0,2,0))
par(mgp=c(3,1,0))
ycoord2=c(0.7,0.5)
ycoord3=c(0.7,0.5,0.3)
xlim0=c(min(negbin_0[,2])-0.02,max(negbin_0[,3])+0.02)
xlim1=c(min(negbin[,2])-0.02,max(negbin[,3])+0.02)
xlims=c(min(negbin_s[,2])-0.02,max(negbin_s[,3])+0.02)
ylim=c(0.2,0.8)
y<-1
plotCI(x=negbin[,1],y=ycoord3,ui=negbin[,3],li=negbin[,2],err=y,ylim=ylim,xlim=xlim1,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
axis(2,labels=c("Error-free", "Naive","MCMC"),at=ycoord3,las=1,cex.axis=1.2,outer=TRUE)
abline(v=exp(betax),lty=2)
mtext(expression(exp(beta[tmt])),side=1,cex=1.5,padj=1.8)
#mtext("Simulation 5",side=3,cex=1.5,line=0.3,at=c(0.67))
plotCI(x=negbin_s[,1],y=ycoord3,ui=negbin_s[,3],li=negbin_s[,2],err=y,ylim=ylim,xlim=xlims,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
abline(v=exp(betas),lty=2)
mtext(expression(exp(beta[sex])),side=1,cex=1.5,padj=1.8)
#dev.off()
source('~/Subversion/ResponseError/Simulations/ZINB/explorative/zinb_1_omega.r')
hist(betax_naive - betax_true)
hist(betax_naive - betax_jags)
source('~/Subversion/ResponseError/Simulations/ZINB/explorative/zinb_1_omega.r')
par(mfrow=c(1,2))
par(oma=c(4,6,3,3))
par(mar=c(0,0,2,0))
par(mgp=c(3,1,0))
ycoord2=c(0.7,0.5)
ycoord3=c(0.7,0.5,0.3)
xlim0=c(min(negbin_0[,2])-0.02,max(negbin_0[,3])+0.02)
xlim1=c(min(negbin[,2])-0.02,max(negbin[,3])+0.02)
xlims=c(min(negbin_s[,2])-0.02,max(negbin_s[,3])+0.02)
ylim=c(0.2,0.8)
y<-1
plotCI(x=negbin[,1],y=ycoord3,ui=negbin[,3],li=negbin[,2],err=y,ylim=ylim,xlim=xlim1,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
axis(2,labels=c("Correct", "Naive","MCMC"),at=ycoord3,las=1,cex.axis=1.2,outer=TRUE)
abline(v=exp(betax),lty=2)
mtext(expression(exp(beta[tmt])),side=1,cex=1.5,padj=1.8)
#mtext("Simulation 5",side=3,cex=1.5,line=0.3,at=c(0.67))
plotCI(x=negbin_s[,1],y=ycoord3,ui=negbin_s[,3],li=negbin_s[,2],err=y,ylim=ylim,xlim=xlims,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
abline(v=exp(betas),lty=2)
mtext(expression(exp(beta[sex])),side=1,cex=1.5,padj=1.8)
sum((betax_naive - betax_true)<0)
sum((betax_naive - betax_jags)<0)
sum((betas_naive - betas_true)<0)
sum((betas_naive - betas_jags)<0)
sum((betas_naive - betas_jags)<0)
par(mfrow=c(1,2))
par(oma=c(4,6,3,3))
par(mar=c(0,0,2,0))
par(mgp=c(3,1,0))
ycoord2=c(0.7,0.5)
ycoord3=c(0.7,0.5,0.3)
xlim0=c(min(negbin_0[,2])-0.02,max(negbin_0[,3])+0.02)
xlim1=c(min(negbin[,2])-0.02,max(negbin[,3])+0.02)
xlims=c(min(negbin_s[,2])-0.02,max(negbin_s[,3])+0.02)
ylim=c(0.2,0.8)
y<-1
plotCI(x=negbin[,1],y=ycoord3,ui=negbin[,3],li=negbin[,2],err=y,ylim=ylim,xlim=xlim1,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
axis(2,labels=c("Correct", "Naive","MCMC"),at=ycoord3,las=1,cex.axis=1.2,outer=TRUE)
abline(v=exp(betax),lty=2)
mtext(expression(exp(beta[tmt])),side=1,cex=1.5,padj=1.8)
#mtext("Simulation 5",side=3,cex=1.5,line=0.3,at=c(0.67))
plotCI(x=negbin_s[,1],y=ycoord3,ui=negbin_s[,3],li=negbin_s[,2],err=y,ylim=ylim,xlim=xlims,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
abline(v=exp(betas),lty=2)
mtext(expression(exp(beta[sex])),side=1,cex=1.5,padj=1.8)
#dev.off()
(betas_naive - betas_jags)<0
index((betas_naive - betas_jags)<0)
betas_naive[(betas_naive - betas_jags)<0]
betas_jags[(betas_naive - betas_jags)<0]
exp(-0.0528)
exp(-0.0544)
library(MASS)
library(latticeExtra)
library(gplots)
par(mfrow=c(1,2))
par(oma=c(4,6,3,3))
par(mar=c(0,0,2,0))
par(mgp=c(3,1,0))
ycoord2=c(0.7,0.5)
ycoord3=c(0.7,0.5,0.3)
xlim0=c(min(negbin_0[,2])-0.02,max(negbin_0[,3])+0.02)
xlim1=c(min(negbin[,2])-0.02,max(negbin[,3])+0.02)
xlims=c(min(negbin_s[,2])-0.02,max(negbin_s[,3])+0.02)
ylim=c(0.2,0.8)
y<-1
plotCI(x=negbin[,1],y=ycoord3,ui=negbin[,3],li=negbin[,2],err=y,ylim=ylim,xlim=xlim1,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
axis(2,labels=c("Correct", "Naive","MCMC"),at=ycoord3,las=1,cex.axis=1.2,outer=TRUE)
abline(v=exp(betax),lty=2)
mtext(expression(exp(beta[tmt])),side=1,cex=1.5,padj=1.8)
#mtext("Simulation 5",side=3,cex=1.5,line=0.3,at=c(0.67))
plotCI(x=negbin_s[,1],y=ycoord3,ui=negbin_s[,3],li=negbin_s[,2],err=y,ylim=ylim,xlim=xlims,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
abline(v=exp(betas),lty=2)
mtext(expression(exp(beta[sex])),side=1,cex=1.5,padj=1.8)
#dev.off()
sum((betas_naive - betas_true)<0)
betas_jags[(betas_naive - betas_true)<0]
betas_naive[(betas_naive - betas_true)<0]
betas_true[(betas_naive - betas_true)<0]
par(mfrow=c(1,2))
par(oma=c(4,6,3,3))
par(mar=c(0,0,2,0))
par(mgp=c(3,1,0))
ycoord2=c(0.7,0.5)
ycoord3=c(0.7,0.5,0.3)
xlim0=c(min(negbin_0[,2])-0.02,max(negbin_0[,3])+0.02)
xlim1=c(min(negbin[,2])-0.02,max(negbin[,3])+0.02)
xlims=c(min(negbin_s[,2])-0.02,max(negbin_s[,3])+0.02)
ylim=c(0.2,0.8)
y<-1
plotCI(x=negbin[,1],y=ycoord3,ui=negbin[,3],li=negbin[,2],err=y,ylim=ylim,xlim=xlim1,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
axis(2,labels=c("Correct", "Naive","MCMC"),at=ycoord3,las=1,cex.axis=1.2,outer=TRUE)
abline(v=exp(betax),lty=2)
mtext(expression(exp(beta[tmt])),side=1,cex=1.5,padj=1.8)
#mtext("Simulation 5",side=3,cex=1.5,line=0.3,at=c(0.67))
plotCI(x=negbin_s[,1],y=ycoord3,ui=negbin_s[,3],li=negbin_s[,2],err=y,ylim=ylim,xlim=xlims,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
abline(v=exp(betas),lty=2)
mtext(expression(exp(beta[sex])),side=1,cex=1.5,padj=1.8)
#dev.off()
source('~/Subversion/ResponseError/Simulations/ZINB/explorative/zinb_4.r')
par(mfrow=c(1,2))
par(oma=c(4,6,3,3))
par(mar=c(0,0,2,0))
par(mgp=c(3,1,0))
ycoord2=c(0.7,0.5)
ycoord3=c(0.7,0.5,0.3)
xlim0=c(min(negbin_0[,2])-0.02,max(negbin_0[,3])+0.02)
xlim1=c(min(negbin[,2])-0.02,max(negbin[,3])+0.02)
xlims=c(min(negbin_s[,2])-0.02,max(negbin_s[,3])+0.02)
ylim=c(0.2,0.8)
y<-1
plotCI(x=negbin[,1],y=ycoord3,ui=negbin[,3],li=negbin[,2],err=y,ylim=ylim,xlim=xlim1,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
axis(2,labels=c("Error-free", "Naive","MCMC"),at=ycoord3,las=1,cex.axis=1.2,outer=TRUE)
abline(v=exp(betax),lty=2)
mtext(expression(exp(beta[tmt])),side=1,cex=1.5,padj=1.8)
#mtext("Simulation 5",side=3,cex=1.5,line=0.3,at=c(0.67))
plotCI(x=negbin_s[,1],y=ycoord3,ui=negbin_s[,3],li=negbin_s[,2],err=y,ylim=ylim,xlim=xlims,ylab="",yaxt="n",lwd=2,gap=0.2,xaxt="n",main="",cex.main=1.4)
axis(1,cex.axis=1.3)#,labels=,at=0.5)
abline(v=exp(betas),lty=2)
mtext(expression(exp(beta[sex])),side=1,cex=1.5,padj=1.8)
#dev.off()
source('~/Subversion/ResponseError/Simulations/ZINB/explorative/zinb_4.r')
source('~/Subversion/ResponseError/Simulations/ZINB/explorative/zinb_4.r')
source('~/Subversion/ResponseError/Simulations/ZINB/explorative/zinb_4.r')
source('~/Subversion/ResponseError/Simulations/ZINB/explorative/zinb_1_omega.r')
exp(-0.0528)
exp(-0.0544)
betas_true[(betas_naive - betas_jags)<0]
exp(-0.147)
path <- "~/Teaching/Bio144/data_examples/bodyFat/"
d.bodyfat <- read.table(paste(path,"bodyfat.clean.txt",sep=""),header=T)
d.bodyfat <- d.bodyfat[,c("bodyfat","age","gewicht","hoehe","bmi","neck","abdomen","hip")]
d.bodyfat$waisthip <- d.bodyfat$abdomen / d.bodyfat$hip
plot(bodyfat ~ bmi,d.bodyfat)
r.simple <- lm(bodyfat ~ bmi, d.bodyfat)
summary(r.simple)
plot(r.simple)
pairs(d.bodyfat)
r.lm.all <- lm(bodyfat ~ age + gewicht + hoehe + bmi + neck + abdomen + hip + waisthip, d.bodyfat)
summary(r.lm.all)
r.lm.all <- lm(bodyfat ~ age + gewicht + hoehe + bmi + neck + abdomen + hip + waisthip, d.bodyfat)
summary(r.lm.all)
AIC(r.lm.all)
AIC(update(r.lm.all,. ~ . -bmi))
d.lm <- lm(bodyfat ~  waisthip + abdomen,data=d.bodyfat)
summary(d.lm)
AIC(d.lm)
AIC(r.lm.all)
path <- "~/Teaching/Bio144/data_examples/bodyFat/"
d.bodyfat <- read.table(paste(path,"bodyfat.clean.txt",sep=""),header=T)
d.bodyfat <- d.bodyfat[,c("bodyfat","age","gewicht","hoehe","bmi","neck","abdomen","hip")]
d.bodyfat$waisthip <- d.bodyfat$abdomen / d.bodyfat$hip
# Simple regression. Question: is BMI a good prognostic factor for bodyfat?
plot(bodyfat ~ bmi,d.bodyfat)
r.simple <- lm(bodyfat ~ bmi, d.bodyfat)
summary(r.simple)
# Tukey-Anscombe plot:
plot(fitted(r.simple),residuals(r.simple))
abline(h=0,lty=2)
# covariate v.s. residuals
plot(d.bodyfat$bmi,residuals(r.simple))
abline(h=0,lty=2)
qqnorm(fitted(r.simple))
qqline(fitted(r.simple))
# or simpler:
plot(r.simple)
summary(r.simple)$r.squared
summary(r.simple)$adj.r.squared # Unterschied?
# Interpretation der Parameter:
coefs <- summary(r.simple)$coef
beta.int <- coefs[1,1]
beta.bmi <- coefs[2,1]
confint(r.simple)
# Was bedeutet Intercept? (bei BMI=0 haette man -27% Bodyfat...)
#
plot(bodyfat ~ bmi,d.bodyfat)
str(d.bodyfat)
path <- "~/Teaching/Bio144/data_examples/bodyFat/"
d.bodyfat <- read.table(paste(path,"bodyfat.clean.txt",sep=""),header=T)
d.bodyfat <- d.bodyfat[,c("bodyfat","age","gewicht","hoehe","bmi","neck","abdomen","hip")]
path
source('~/Hg/code/Hg_Urin_6.r')
library(relaimpo)
setwd("~/Hg")
data <- read.csv("./data/QuecksilberDaten_codiert_29_02_16_steffi.csv",sep=";")
data$hg_soil_max[data$hg_soil_max ==999] <- NA
data$hg_soil_mean[data$hg_soil_mean ==999] <- NA
data$Hg_urin_krea[data$Hg_urin_krea==999] <- NA
data$Hg_urin[data$Hg_urin==999] <- NA
data$urin_krea[data$urin_krea==999] <- NA
data$Hg_hair[data$Hg_hair==999] <- NA
#### replace Hg_urin=0 by Hg_urin=0.02 (mean between 0 and detection limit of 0.04)
data$Hg_urin_new <- data$Hg_urin
data$Hg_urin_new[data$Hg_urin_new<0.04] <- 0.02
### then re-calculate the kreatin-adjusted Hg values
data$Hg_urin_krea_new <- data$Hg_urin_new / data$urin_krea * 100
#
# #### replace Hg_hair=0 by Hg_hair=0.015 (mean between 0 and detection limit 0.02)
data$Hg_hair[data$Hg_hair<0.02] <- 0.01
# binaere smoking covariable:
data$smoking <- as.numeric(data$smoking_quant>0) # sqrt(data$smoking_quant)#
### encode high_risk_veg as 0 or 1
data$high_risk_veg_bin <- as.numeric(data$high_risk_veg)
### dichotomize last_time_fish in categories "<=3 days" and ">3 days"
data$last_time_fish_bin <- as.numeric(data$last_time_fish<=3)
data$detection_limit_bin <- as.numeric(data$hg_soil_mean<=0.01)
data$Meerfisch_quant <- data$Meeresfische_Anzahl_30_Tage
data$veg_garden_bin <- data$veg_garden_0_1
data.save <- data[,c("Hg_urin_krea_new","hg_soil_mean","detection_limit_bin","veg_garden_bin","migration","smoking","amalgam_quant","age_at_visit","Meerfisch_quant","last_time_fish_bin","mother","family_no")]
data.save <- data.save[complete.cases(data.save),]
write.table(data.save,file="/home/steffi/IFSPM/relativeImportance/rscripts/LMM/Hg_urin.csv",sep=",",row.names=F,quote=F)
path <- "~/Teaching/Bio144/data_examples/Hg/"
d.hg <- read.table(paste(path,"Hg_urin.csv",sep=""),header=T, sep=",")
names(d.hg)
names(d.hg) <- c("Hg_urin", "Hg_soil", "detection_limit", "veg_garden", "migration", "smoking","amalgam_quant", "age", "Meerfisch_quant", "last_time_fish", "mother", "family_no")
str(d.hg)
d.hg$Hg_soil <- d.hg$Hg_soil[sample(1:nrow(d.hg))]
lm(Hg_soil ~ . , d.hg)
summary(lm(Hg_soil ~ . , d.hg))
summary(lm(Hg_urin ~ . , d.hg))
path <- "~/Teaching/Bio144/data_examples/Hg/"
d.hg <- read.table(paste(path,"Hg_urin.csv",sep=""),header=T, sep=",")
names(d.hg) <- c("Hg_urin", "Hg_soil", "detection_limit", "veg_garden", "migration", "smoking","amalgam_quant", "age", "Meerfisch_quant", "last_time_fish", "mother", "family_no")
summary(lm(Hg_urin ~ . , d.hg))
summary(lm(log(Hg_urin) ~ . , d.hg))
summary(lm(log(Hg_urin) ~ log(Hg_soil) , d.hg))
summary(lm(log(Hg_urin) ~ log(Hg_soil) +detection_limit, d.hg))
summary(lm(log(Hg_urin) ~ log(Hg_soil) +detection_limit + migration +amalgam_quant + age + Merrfisch_quant, d.hg))
d.hg <- read.table(paste(path,"Hg_urin.csv",sep=""),header=T, sep=",")
names(d.hg) <- c("Hg_urin", "Hg_soil", "detection_limit", "veg_garden", "migration", "smoking","amalgam_quant", "age", "Meerfisch_quant", "last_time_fish", "mother", "family_no")
d.hg$Hg_soil <- d.hg$Hg_soil[sample(1:nrow(d.hg))]
summary(lm(log(Hg_urin) ~ log(Hg_soil) +detection_limit + migration +amalgam_quant + age + Merrfisch_quant, d.hg))
summary(lm(log(Hg_urin) ~ log(Hg_soil) +detection_limit + migration +amalgam_quant + age + Meerfisch_quant, d.hg))
library(relaimpo)
setwd("~/Hg")
data <- read.csv("./data/QuecksilberDaten_codiert_29_02_16_steffi.csv",sep=";")
data$hg_soil_max[data$hg_soil_max ==999] <- NA
data$hg_soil_mean[data$hg_soil_mean ==999] <- NA
data$Hg_urin_krea[data$Hg_urin_krea==999] <- NA
data$Hg_urin[data$Hg_urin==999] <- NA
data$urin_krea[data$urin_krea==999] <- NA
data$Hg_hair[data$Hg_hair==999] <- NA
#### replace Hg_urin=0 by Hg_urin=0.02 (mean between 0 and detection limit of 0.04)
data$Hg_urin_new <- data$Hg_urin
data$Hg_urin_new[data$Hg_urin_new<0.04] <- 0.02
### then re-calculate the kreatin-adjusted Hg values
data$Hg_urin_krea_new <- data$Hg_urin_new / data$urin_krea * 100
#
# #### replace Hg_hair=0 by Hg_hair=0.015 (mean between 0 and detection limit 0.02)
data$Hg_hair[data$Hg_hair<0.02] <- 0.01
# binaere smoking covariable:
data$smoking <- as.numeric(data$smoking_quant>0) # sqrt(data$smoking_quant)#
### encode high_risk_veg as 0 or 1
data$high_risk_veg_bin <- as.numeric(data$high_risk_veg)
### dichotomize last_time_fish in categories "<=3 days" and ">3 days"
data$last_time_fish_bin <- as.numeric(data$last_time_fish<=3)
data$detection_limit_bin <- as.numeric(data$hg_soil_mean<=0.01)
data$Meerfisch_quant <- data$Meeresfische_Anzahl_30_Tage
data$veg_garden_bin <- data$veg_garden_0_1
data.save <- data[,c("Hg_urin_krea_new","hg_soil_mean","veg_garden_bin","migration","smoking","amalgam_quant","age_at_visit","Meerfisch_quant","last_time_fish_bin","mother","family_no")]
data.save <- data.save[complete.cases(data.save),]
write.table(data.save,file="/home/steffi/Teaching/Bio144/data_examples/Hg",sep=",",row.names=F,quote=F)
write.table(data.save,file="/home/steffi/Teaching/Bio144/data_examples/Hg/Hg_urin.csv",sep=",",row.names=F,quote=F)
path <- "~/Teaching/Bio144/data_examples/Hg/"
d.hg <- read.table(paste(path,"Hg_urin.csv",sep=""),header=T, sep=",")
names(d.hg) <- c("Hg_urin", "Hg_soil", "veg_garden", "migration", "smoking","amalgam_quant", "age", "Meerfisch_quant", "last_time_fish", "mother", "family_no")
d.hg$Hg_soil <- d.hg$Hg_soil[sample(1:nrow(d.hg))]
str(d.hg)
pairs(d.hg)
lm(log(Hg_urin) ~ sqrt(amalgam_quant), data=d.hg, xlab="Anzahl Amalgamfuellungen", ylab = "Hg Urin")
summary(lm(log(Hg_urin) ~ sqrt(amalgam_quant), data=d.hg))
plot(log(Hg_urin) ~ sqrt(amalgam_quant) + mother, data=d.hg, xlab="Anzahl Amalgamfuellungen", ylab = "Hg Urin")
summary(lm(log(Hg_urin) ~ sqrt(amalgam_quant) + mother, data=d.hg))
summary(lm(log(Hg_urin) ~ sqrt(amalgam_quant) + mother*age, data=d.hg))
library(relaimpo)
aa <- summary(lm(log(Hg_urin) ~ sqrt(amalgam_quant) + mother*age, data=d.hg))
calc.relimp(aa)
aa <- summary(lm(log(Hg_urin) ~ sqrt(amalgam_quant) + mother + age, data=d.hg))
dim(d.hg)
calc.relimp(aa)
aa <- lm(log(Hg_urin) ~ sqrt(amalgam_quant) + mother + age, data=d.hg)
calc.relimp(aa)
relimp.r1.urin.ch<-calc.relimp(r1.urin.ch,type=c("lmg"),diff=T)
library(lme4)
r2.urin.ch <- lmer(log10(Hg_urin_krea_new) ~   log10(hg_soil_mean) + detection_limit_bin + age_at_visit + migration  + veg_garden_bin + sqrt(Meerfisch_quant) + last_time_fish_bin   + (1|family_no),data=subset(data,mother==0))
summary(r2.urin.ch)
AIC(r2.urin.ch)
#################
### mothers
#################
r1.urin.m <- lm(log10(Hg_urin_krea_new) ~  log10(hg_soil_mean) + detection_limit_bin + age_at_visit  + migration + smoking + sqrt(amalgam_quant) + veg_garden_bin + sqrt(Meerfisch_quant) + last_time_fish_bin  ,data=subset(data,mother==1))
relimp.r1.urin.m<-calc.relimp(r1.urin.m,type=c("lmg"),diff=T)
summary(r1.urin.m)
AIC(r1.urin.m)
relimp.r1.urin.m
library(relaimpo)
setwd("~/Hg")
data <- read.csv("./data/QuecksilberDaten_codiert_29_02_16_steffi.csv",sep=";")
data$hg_soil_max[data$hg_soil_max ==999] <- NA
data$hg_soil_mean[data$hg_soil_mean ==999] <- NA
data$Hg_urin_krea[data$Hg_urin_krea==999] <- NA
data$Hg_urin[data$Hg_urin==999] <- NA
data$urin_krea[data$urin_krea==999] <- NA
data$Hg_hair[data$Hg_hair==999] <- NA
#### replace Hg_urin=0 by Hg_urin=0.02 (mean between 0 and detection limit of 0.04)
data$Hg_urin_new <- data$Hg_urin
data$Hg_urin_new[data$Hg_urin_new<0.04] <- 0.02
### then re-calculate the kreatin-adjusted Hg values
data$Hg_urin_krea_new <- data$Hg_urin_new / data$urin_krea * 100
#
# #### replace Hg_hair=0 by Hg_hair=0.015 (mean between 0 and detection limit 0.02)
data$Hg_hair[data$Hg_hair<0.02] <- 0.01
# binaere smoking covariable:
data$smoking <- as.numeric(data$smoking_quant>0) # sqrt(data$smoking_quant)#
### encode high_risk_veg as 0 or 1
data$high_risk_veg_bin <- as.numeric(data$high_risk_veg)
### dichotomize last_time_fish in categories "<=3 days" and ">3 days"
data$last_time_fish_bin <- as.numeric(data$last_time_fish<=3)
data$detection_limit_bin <- as.numeric(data$hg_soil_mean<=0.01)
data$Meerfisch_quant <- data$Meeresfische_Anzahl_30_Tage
data$veg_garden_bin <- data$veg_garden_0_1
data.save <- data[,c("Hg_urin_krea_new","hg_soil_mean","veg_garden_bin","migration","smoking","amalgam_quant","age_at_visit","Meerfisch_quant","last_time_fish_bin","mother","family_no")]
data.save <- data.save[complete.cases(data.save),]
write.table(data.save,file="/home/steffi/Teaching/Bio144/data_examples/Hg/Hg_urin.csv",sep=",",row.names=F,quote=F)
#############################################################################
### Model in Report 1.6
############################################################################
#######################
### for Children
#######################
r1.urin.ch <- lm(log10(Hg_urin_krea_new) ~ log10(hg_soil_mean) + detection_limit_bin + age_at_visit + migration  + veg_garden_bin + sqrt(Meerfisch_quant) + last_time_fish_bin  ,data=subset(data,mother==0))
summary(r1.urin.ch)
AIC(r1.urin.ch)
relimp.r1.urin.ch<-calc.relimp(r1.urin.ch,type=c("lmg"),diff=T)
# including a random family effect
library(lme4)
r2.urin.ch <- lmer(log10(Hg_urin_krea_new) ~   log10(hg_soil_mean) + detection_limit_bin + age_at_visit + migration  + veg_garden_bin + sqrt(Meerfisch_quant) + last_time_fish_bin   + (1|family_no),data=subset(data,mother==0))
summary(r2.urin.ch)
AIC(r2.urin.ch)
#################
### mothers
#################
r1.urin.m <- lm(log10(Hg_urin_krea_new) ~  log10(hg_soil_mean) + detection_limit_bin + age_at_visit  + migration + smoking + sqrt(amalgam_quant) + veg_garden_bin + sqrt(Meerfisch_quant) + last_time_fish_bin  ,data=subset(data,mother==1))
relimp.r1.urin.m<-calc.relimp(r1.urin.m,type=c("lmg"),diff=T)
summary(r1.urin.m)
AIC(r1.urin.m)
relimp.r1.urin.m
library(reporttools)
library(relaimpo)
library(biostatUZH)
options(width = 85, digits = 4, signif=2, show.signif.stars=FALSE)
alpha <- 0.05
qa <- qnorm(1 - alpha / 2)
### sets up a folder/report, folder/code, folder/data directory structure
#include <- function(path, file){source(paste(path,file,sep=""))}
zero <- "/home/steffi/Hg/" ###Change Here
date <- "20160118"		       ###Change Here
path.code <- paste(zero, "code/", sep = "")
path.data <- paste(zero, "data/", sep = "")
path.report <- paste(zero, "report/", sep = "")
# Possibly use source commands to read in your code
#source(paste(path.code, "DataInput.r", sep=""))
#source(paste(path.code, "DataPrep.r", sep=""))
#source(paste(path.code, "DataChecking.r", sep=""))
setwd(path.report) #else other files seem to get saved in the wrong place...
data <- read.csv("../data/QuecksilberDaten_codiert_21_03_16_steffi.csv",sep=";")
data$hg_soil_max[data$hg_soil_max ==999] <- NA
data$hg_soil_mean[data$hg_soil_mean ==999] <- NA
data$hg_soil_house[data$hg_soil_house ==999] <- NA
data$Hg_urin_krea[data$Hg_urin_krea==999] <- NA
data$Hg_urin[data$Hg_urin==999] <- NA
data$urin_krea[data$urin_krea==999] <- NA
data$Hg_hair[data$Hg_hair==999] <- NA
#### replace Hg_urin=0 by Hg_urin=0.02 (mean between 0 and detection limit of 0.04)
data$Hg_urin_new <- data$Hg_urin
data$Hg_urin_new[data$Hg_urin_new<0.04] <- 0.02
### then re-calculate the kreatin-adjusted Hg values
data$Hg_urin_krea_new <- data$Hg_urin_new / data$urin_krea * 100
#
# #### replace Hg_hair=0 by Hg_hair=0.015 (mean between 0 and detection limit 0.02)
data$Hg_hair[data$Hg_hair<0.02] <- 0.01
# binaere smoking covariable:
data$smoking <- as.numeric(data$smoking_quant>0) # sqrt(data$smoking_quant)#
### encode high_risk_veg as 0 or 1
data$high_risk_veg_bin <- as.numeric(data$high_risk_veg)
### dichotomize last_time_fish in categories "<=3 days" and ">3 days"
data$last_time_fish_bin <- as.numeric(data$last_time_fish<=3)
data$determination_limit_bin <- 1-data$larger_than_determination_limit_soil #as.numeric(data$hg_soil_house<=0.1)
Hg_urin <- data$Hg_urin
Hg_urin_krea_new <- data$Hg_urin_krea_new
urin_krea <- data$urin_krea
Hg_hair <- data$Hg_hair
hg_soil_mean <- data$hg_soil_mean
hg_soil_house <- data$hg_soil_house
mother <- data$mother
datC <- data.frame(Hg_urin,Hg_urin_krea_new,Hg_hair)
names(datC) <- c("Hg Urin", "Hg Urin adjusted", "Hg Haar")
tableContinuous(vars=datC, prec=2,
cap="Hg Urin: Hg Konzentration im Urin vor Normalisierung mit Kreatinin-Gehalt; Hg Urin adjusted: unter Ber\"ucksichtigung der Urin-Konzentration (Kreatinin-Wert), ergibt einen standardisierten Wert, welcher in der Analyse verwendet wird; Hg Hair: Hg Konzentration im Haar.",label="tab:response")
data$Mittelmeer_birth_familyMother <- data$Mittelmeer_place_of_birth
for (ii in 1:nrow(data)){
if (data$mother[ii]==0)
data[ii,"Mittelmeer_birth_familyMother"] <-  subset(data,family_no==family_no[ii] & mother==1)$Mittelmeer_place_of_birth
}
data$Meeresfisch_quant <- data$Meeresfische_Anzahl
data$veg_garden_bin <- data$veg_garden_0_1
data$migration <- data$Mittelmeer_birth_familyMother # data$Mittelmeer_place_of_birth # #Mittelmeer_place_of_birth_
r1.urin.ch <- lm(log10(Hg_urin_krea_new) ~ log10(hg_soil_house) + determination_limit_bin  + age_at_visit + migration  + veg_garden_bin + sqrt(Meeresfisch_quant) + last_time_meeresfisch_bin ,data=subset(data,mother==0))
relimp.r1.urin.ch<-calc.relimp(r1.urin.ch,type=c("lmg"),diff=T)
relimp.r1.urin.ch
r1.urin.m <- lm(log10(Hg_urin_krea_new) ~  log10(hg_soil_house) + determination_limit_bin + age_at_visit  + migration + smoking + sqrt(amalgam_quant) + veg_garden_bin + sqrt(Meeresfisch_quant) + last_time_meeresfisch_bin  ,data=subset(data,mother==1))
relimp.r1.urin.m<-calc.relimp(r1.urin.m,type=c("lmg"),diff=T)
relimp.r1.urin.m
r1.urin <- lm(log10(Hg_urin_krea_new) ~  log10(hg_soil_house)   + determination_limit_bin + age_at_visit * mother +  migration + smoking + sqrt(amalgam_quant) + veg_garden_bin + sqrt(Meeresfisch_quant) + last_time_meeresfisch_bin ,data=data)
relimp.r1.urin<-calc.relimp(r1.urin,type=c("lmg"),diff=T)
relimp.r1.urin
dim(data)
str(d.hg)
plot(log(Hg_urin) ~ amalgam_quant, data=d.hg, xlab="Anzahl Amalgamfuellungen", ylab = "Hg Urin")
plot(log(Hg_urin) ~ age, data=d.hg, xlab="Alter", ylab = "Hg Urin")
plot(log(Hg_urin) ~ Meerfisch_quant, data=d.hg, xlab="Alter", ylab = "Hg Urin")
?xyplot
xyplot(Sepal.Length + Sepal.Width ~ Petal.Length + Petal.Width | Species,
data = iris, scales = "free", layout = c(2, 2),
auto.key = list(x = .6, y = .7, corner = c(0, 0)))
stream ("http://stat.ethz.ch/Teaching/Datasets/WBL/stream.dat")
read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/stream.dat")
read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/stream.dat",header=T)
d.hafer <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/hafer.dat",header=T)
d.hafer
setwd("~/Teaching/Bio144/data_examples/WBL/")
write.table(d.stream,past(path,"d.stream",sep=""))
d.stream <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/stream.dat",header=T)
write.table(d.stream,past(path,"d.stream",sep=""))
paste(path,"d.stream",sep="")
write.table(d.stream,paste(path,"strea.dat",sep=""))
?write.table
setwd("~/Teaching/Bio144/data_examples/WBL/")
d.stream <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/stream.dat",header=T)
write.table(d.stream,paste(path,"strea.dat",sep=""),quote=FALSE)
path
d.hafer <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/hafer.dat",header=T)
write.table(d.hafer,paste(path,"hafer.dat",sep=""),quote=FALSE)
path
path <- "~/Teaching/Bio144/data_examples/WBL/"
d.stream <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/stream.dat",header=T)
write.table(d.stream,paste(path,"stream.dat",sep=""),quote=FALSE)
d.hafer <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/hafer.dat",header=T)
write.table(d.hafer,paste(path,"hafer.dat",sep=""),quote=FALSE)
d.hafer <- read.table("hafer.dat",header=T)
d.hafer
boxplot(d.hafer)
boxplot(GROUP ~ YIELD, d.hafer)
boxplot(YIELD ~ GROUP, d.hafer)
plot(d.hafer$GROUP,d.hafer$YIELD,xlim=c(0.5,3.5),
xaxt="n",xlab="",ylab="YIELD")
axis(1,at=c(1,2,3),labels=c("Group 1","Group 2","Check"))
text(d.hafer$GROUP+0.08,d.hafer$YIELD,labels=d.hafer$REP,cex=1.3)
boxplot(YIELD ~ GROUP, d.hafer)
str(d.hafer)
d.hafer$GROUP <- factor(d.hafer$GROUP)
r.hafer <- aov(YIELD ~ GROUP)
r.hafer <- aov(YIELD ~ GROUP,d.hafer)
r.hafer
summary(r.hafer)
summary(r.hafer)
boxplot(YIELD ~ GROUP, d.hafer)
r.hafer <- aov(YIELD ~ REP,d.hafer)
summary(r.hafer)
anova(r.hafer)
