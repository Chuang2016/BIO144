path <- "~/Teaching/Bio144/data_examples/anova/Hafer/"
d.hafer <- read.table(paste(path,"hafer.dat",sep=""),header=T, sep=",")
d.hafer
d.hafer <- read.table("hafer.dat",header=T)
path <- "~/Teaching/Bio144/data_examples/anova/Hafer/"
d.hafer <- read.table("hafer.dat",header=T)
d.hafer <- read.table(paste(path,"hafer.dat",sep=""),header=T)
d.hafer
d.blutz <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/blutzucker.dat",header=T)
d.blutz
d.blutzucker <- read.table("http://stat.ethz.ch/Teaching/Datasets/WBL/blutzucker.dat",header=T)
write.table(d.blutzucker,paste(path,"blutzucker.dat",sep=""),quote=FALSE)
path
setwd("~/Teaching/Bio144/data_examples/anova/Blutzucker/")
d.blutzucker <- read.table("blutzucker.dat",header=T)
d.blutzucker
plot(BLUTZUCK ~ DIAET,d.blutzucker)
plot(BLUTZUCK ~ as.nuemeric(DIAET),d.blutzucker)
plot(BLUTZUCK ~ as.numeric(DIAET),d.blutzucker)
plot(BLUTZUCK ~ as.numeric(DIAET),d.blutzucker,xaxt="n")
plot(BLUTZUCK ~ as.numeric(DIAET),d.blutzucker,xaxt="n")
axis(1,1:4)
plot(BLUTZUCK ~ DIAET,d.blutzucker,xaxt="n")
axis(1,1:4)
r.blz <- aov(BLUTZUCK ~ DIAET, data = d.blz)
summary(r.blz)
rm(list=ls())
setwd("~/Teaching/Bio144/data_examples/anova/Blutzucker/")
d.blz <- read.table("blutzucker.dat",header=T)
plot(BLUTZUCK ~ DIAET,d.blz,xaxt="n")
axis(1,1:4)
r.blz <- aov(BLUTZUCK ~ DIAET, data = d.blz)
summary(r.blz)
d.blz$DIAET <- as.factor(d.blz$DIAET)
plot(BLUTZUCK ~ DIAET,d.blz,xaxt="n")
axis(1,1:4)
setwd("~/Teaching/Bio144/data_examples/anova/Blutzucker/")
d.blz <- read.table("blutzucker.dat",header=T)
plot(BLUTZUCK ~ DIAET,d.blz,xaxt="n")
axis(1,1:4)
d.blz$DIAET <- as.factor(d.blz$DIAET)
r.blz <- aov(BLUTZUCK ~ DIAET, data = d.blz)
summary(r.blz)
path <- "~/Teaching/Bio144/data_examples/anova/Blutzucker/"
d.blz <- read.table(paste(path,"blutzucker.dat",sep=""),header=T)
?glm
?gl
?coplot
data.frame(state.x77)
with(data.frame(state.x77), {
coplot(Life.Exp ~ Income | Illiteracy * state.region, number = 3,
panel = function(x, y, ...) panel.smooth(x, y, span = .8, ...))
## y ~ factor -- not really sensible, but 'show off':
#coplot(Life.Exp ~ state.region | Income * state.division,
#       panel = panel.smooth)
})
data.frame(iris)
with(data.frame(iris), {
coplot(Sepal.Length ~ Sepal.Width| Species, number = 3,
panel = function(x, y, ...) panel.smooth(x, y, span = .8, ...))
## y ~ factor -- not really sensible, but 'show off':
#coplot(Life.Exp ~ state.region | Income * state.division,
#       panel = panel.smooth)
})
coplot(lat ~ long | depth, data = quakes)
given.depth <- co.intervals(quakes$depth, number = 4, overlap = .1)
coplot(lat ~ long | depth, data = quakes, given.v = given.depth, rows = 1)
with(data.frame(iris), {
coplot(Sepal.Length ~ Sepal.Width| Species, number = 3,
panel = function(x, y, ...) panel.smooth(x, y, span = .8, ...))
## y ~ factor -- not really sensible, but 'show off':
#coplot(Life.Exp ~ state.region | Income * state.division,
#       panel = panel.smooth)
})
d.hg
path <- "~/Teaching/Bio144/data_examples/Hg/"
d.hg <- read.table(paste(path,"Hg_urin.csv",sep=""),header=T, sep=",")
d.hg <- d.hg[,-c(11)]
names(d.hg) <- c("Hg_urin", "Hg_soil", "veg_garden", "migration", "smoking","amalgam_quant", "age", "Meerfisch_quant", "last_time_fish", "mother")
d.mother
d.hg$mother
?legend
?cdplot
fail <- factor(c(2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1,
1, 2, 1, 1, 1, 1, 1),
levels = 1:2, labels = c("no", "yes"))
temperature <- c(53, 57, 58, 63, 66, 67, 67, 67, 68, 69, 70, 70,
70, 70, 72, 73, 75, 75, 76, 76, 78, 79, 81)
cdplot(fail~temperature)
?legend
cdplot(mother~log(Hg_urin),data=d.hg)
source('~/.active-rstudio-document')
plot(log(Hg_urin) ~ log(Hg_soil), data=d.hg, xlab="Hg Boden",
ylab = "Hg Urin",pch=21,bg=as.numeric(mother)+3,xlim=c(-4.5,4.5))
plot(log(Hg_urin) ~ log(Hg_soil), data=d.hg, xlab="Hg Boden",
ylab = "Hg Urin",pch=21,bg=as.numeric(mother)+4,xlim=c(-4.5,4.5))
plot(log(Hg_urin) ~ log(Hg_soil), data=d.hg, xlab="Hg Boden",
ylab = "Hg Urin",pch=21,bg=as.numeric(mother)+2,xlim=c(-4.5,4.5))
legend("topright",legend=c("Kinder","Muetter"),col=c(3,4),pch=21,pt.bg=c(3,4))
plot(log(Hg_urin) ~ log(Hg_soil), data=d.hg, xlab="Hg Boden",
ylab = "Hg Urin",pch=21,bg=as.numeric(mother)+2,xlim=c(-4.5,4.5),cex.pt=1.4)
boxplot(mother~log(Hg_urin),data=d.hg)
boxplot(log(Hg_urin)~mother,data=d.hg)
?cdplot
d.plasma <- data("plasma",package="HSAUR3")
d.plasma
install.packages("HSAUR3")
library(HSAUR3)
d.plasma <- data("plasma",package="HSAUR3")
d.plasma
data("plasma",package="HSAUR3")
plasma
head(plasma)
plasma
dim(plasma)
plasma
plasma[29,]
coplot(Sepal.Width ~ Sepal.Lenght, given.values=Species*Petal.Length)
data(iris)
coplot(Sepal.Width ~ Sepal.Lenght, given.values=Species*Petal.Length)
coplot(Sepal.Width ~ Sepal.Length, given.values=Species*Petal.Length)
?coplot
coplot(Sepal.Width ~ Sepal.Length | Species*Petal.Length,iris)
str(d.hg)
coplot(log(Hg_urin) ~  Meerfisch_quant | veg_garden * age,d.hg)
coplot(log(Hg_urin) ~  Meerfisch_quant | migration * age,d.hg)
coplot(log(Hg_urin) ~  Meerfisch_quant | veg_garden * age,d.hg,panel=panel.smooth)
coplot(log(Hg_urin) ~  Meerfisch_quant | mother * age,d.hg,panel=panel.smooth)
coplot(log(Hg_urin) ~  age | mother * smoking,d.hg,panel=panel.smooth)
coplot(log(Hg_urin) ~  age | mother ,d.hg,panel=panel.smooth)
coplot(log(Hg_urin) ~  age | mother * migration ,d.hg,panel=panel.smooth)
library(shiny)
setwd("/home/steffi/Shiny/Tutorials/")
runApp("/home/steffi/Shiny/Tutorial/census-app")
runApp("/home/steffi/Shiny/Tutorial/census-app")
?barplot
library("HSAUR3")
str(USmelanoma)
boxplot(USmelanoma$mortality)
hist(USmelanoma$mortality)
###################################################
### code chunk number 5: DAGD-USmelanoma-boxocean
###################################################
plot(mortality ~ ocean, data = USmelanoma,
xlab = "Contiguity to an ocean", ylab = "Mortality")
dyes <- with(USmelanoma, density(mortality[ocean == "yes"]))
dno <- with(USmelanoma, density(mortality[ocean == "no"]))
plot(dyes, lty = 1, main = "", ylim = c(0, 0.018),
xlab = "Mortality")
lines(dno, lty = 2)
legend("topleft", lty = 1:2, legend = c("Coastal State",
"Land State"), bty = "n")
# 12.5.2016
# Test-File, um die Uebungen in "Getting Started with R" von Owen zu machen
rm(list=ls())
getwd()
setwd("~/Teaching/Bio144/Material_Owen/GSWR_datasets/")
comp.dat <- read.csv("compensation.csv")
aggregate(comp.dat$Fruit, list(comp.dat$Grazing),mean)
tapply(comp.dat$Fruit, list(comp.dat$Grazing),mean)
mean.fruit <- tapply(comp.dat$Fruit, list(comp.dat$Grazing),mean)
sd.fruit <- tapply(comp.dat$Fruit, list(comp.dat$Grazing),sd)
n.fruit <- tapply(comp.dat$Fruit, list(comp.dat$Grazing),length)
barplot(mean.fruit,xlab="Treatment",ylab="Fruit Production",ylim=c(0,100))
rm(list=ls())
getwd()
setwd("~/Teaching/Bio144/Material_Owen/GSWR_datasets/")
comp.dat <- read.csv("compensation.csv")
aggregate(comp.dat$Fruit, list(comp.dat$Grazing),mean)
tapply(comp.dat$Fruit, list(comp.dat$Grazing),mean)
mean.fruit <- tapply(comp.dat$Fruit, list(comp.dat$Grazing),mean)
sd.fruit <- tapply(comp.dat$Fruit, list(comp.dat$Grazing),sd)
n.fruit <- tapply(comp.dat$Fruit, list(comp.dat$Grazing),length)
barplot(mean.fruit,xlab="Treatment",ylab="Fruit Production",ylim=c(0,100))
mids <- barplot(mean.fruit,xlab="Treatment",ylab="Fruit Production",ylim=c(0,100))
arrows(mids,mean.fruit - sd.fruit,mids,mean.fruit+sd.fruit,code=3,angle=90,length=0.1)
text(mids,2,paste("n=",n.fruit))
comp.dat <- read.csv("~/Teaching/Bio144/Material_Owen/GSWR_datasets/compensation.csv")
barplot(mean.fruit,xlab="Treatment",ylab="Fruit Production",ylim=c(0,100))
mids <- barplot(mean.fruit,xlab="Treatment",ylab="Fruit Production",ylim=c(0,100))
arrows(mids,mean.fruit - sd.fruit,mids,mean.fruit+sd.fruit,code=3,angle=90,length=0.1)
text(mids,2,paste("n=",n.fruit))
tapply(comp.dat$Fruit, list(comp.dat$Grazing),mean)
barplot(mean.fruit,xlab="Treatment",ylab="Fruit Production",ylim=c(0,100))
barplot(mean.fruit,xlab="Treatment",ylab="Fruit Production",ylim=c(0,100),main="Barplot")
chi.data <- matrix(c(115,30,85,70),2,2,byrow=T,dimnames=list(c("Black","Red"),c("Industrial","Rural")))
barplot(chi.data,beside=T,col=c("Black","Red"),ylim=c(0,125),legend=T)
mids <- barplot(mean.fruit,xlab="Treatment",ylab="Fruit Production",ylim=c(0,100))
mids
